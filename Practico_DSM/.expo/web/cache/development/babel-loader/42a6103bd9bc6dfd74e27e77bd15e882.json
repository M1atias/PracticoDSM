{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\admin\\\\PracticoDSM\\\\Practico_DSM\\\\components\\\\AlbumList.js\";\n\nimport React, { Component, useEffect, useState } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport axios from 'axios';\nimport AlbumDetail from \"./AlbumDetail\";\n\nvar AlbumList = function AlbumList(props) {\n  cons[(photos, setPhotos)] = useState(null);\n  useEffect(function () {\n    axios.get('https://api.flickr.com/services/rest/?method=flickr.photosets.getList&api_key=6e8a597cb502b7b95dbd46a46e25db8d&user_id=137290658%40N08&format=json&nojsoncallback=1').then(function (response) {\n      return setPhotos({\n        photoset: response.data.photosets.photoset\n      });\n    });\n  }, []);\n\n  var renderAlbums = function renderAlbums() {\n    return photos.map(function (album) {\n      return React.createElement(AlbumDetail, {\n        navigation: _this.props.navigation,\n        key: album.id,\n        title: album.title._content,\n        albumId: album.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 7\n        }\n      });\n    });\n  };\n\n  if (!photos) {\n    return React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 14\n      }\n    }, \"Loading...\");\n  }\n\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, renderAlbums(photos)));\n};\n\nexport default AlbumList;","map":{"version":3,"sources":["C:/Users/admin/PracticoDSM/Practico_DSM/components/AlbumList.js"],"names":["React","Component","useEffect","useState","axios","AlbumDetail","AlbumList","props","cons","photos","setPhotos","get","then","response","photoset","data","photosets","renderAlbums","map","album","navigation","id","title","_content","flex"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,SAA1B,EAAqCC,QAArC,QAAoD,OAApD;;;;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAW;AAC3BC,EAAAA,IAAI,EAAEC,MAAM,EAAEC,SAAV,EAAJ,GAA2BP,QAAQ,CAAC,IAAD,CAAnC;AACAD,EAAAA,SAAS,CAAC,YAAI;AACZE,IAAAA,KAAK,CACFO,GADH,CAEI,qKAFJ,EAIGC,IAJH,CAIQ,UAACC,QAAD;AAAA,aACJH,SAAS,CAAC;AAACI,QAAAA,QAAQ,EAAED,QAAQ,CAACE,IAAT,CAAcC,SAAd,CAAwBF;AAAnC,OAAD,CADL;AAAA,KAJR;AAOD,GARQ,EAQP,EARO,CAAT;;AAUA,MAAMG,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,WAAOR,MAAM,CAACS,GAAP,CAAW,UAACC,KAAD;AAAA,aAChB,oBAAC,WAAD;AACE,QAAA,UAAU,EAAE,KAAI,CAACZ,KAAL,CAAWa,UADzB;AAEE,QAAA,GAAG,EAAED,KAAK,CAACE,EAFb;AAGE,QAAA,KAAK,EAAEF,KAAK,CAACG,KAAN,CAAYC,QAHrB;AAIE,QAAA,OAAO,EAAEJ,KAAK,CAACE,EAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADgB;AAAA,KAAX,CAAP;AAQD,GATD;;AAWE,MAAG,CAACZ,MAAJ,EAAY;AACV,WAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;;AAED,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACe,MAAAA,IAAI,EAAE;AAAP,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaP,YAAY,CAACR,MAAD,CAAzB,CADF,CADF;AAMH,CAjCD;;AA2EA,eAAeH,SAAf","sourcesContent":["import React, {Component, useEffect, useState} from 'react';\nimport {ScrollView, Text, View} from 'react-native';\nimport axios from 'axios';\nimport AlbumDetail from './AlbumDetail';\n\nconst AlbumList = (props) => {\n  cons [photos, setPhotos] = useState(null)\n  useEffect(()=>{\n    axios\n      .get(\n        'https://api.flickr.com/services/rest/?method=flickr.photosets.getList&api_key=6e8a597cb502b7b95dbd46a46e25db8d&user_id=137290658%40N08&format=json&nojsoncallback=1',\n      )\n      .then((response) =>\n        setPhotos({photoset: response.data.photosets.photoset}),\n      );\n  },[])\n\n  const renderAlbums = () => {\n    return photos.map((album) => (\n      <AlbumDetail\n        navigation={this.props.navigation}\n        key={album.id}\n        title={album.title._content}\n        albumId={album.id}\n      />\n    ));\n  }\n\n    if(!photos) {\n      return <Text>Loading...</Text>;\n    }\n\n    return (\n      <View style={{flex: 1}}>\n        <ScrollView>{renderAlbums(photos)}</ScrollView>\n      </View>\n    );\n    \n}\n\n/*\nclass AlbumList extends Component {\n  state = {photoset: null};\n\n  componentWillMount() {\n    axios\n      .get(\n        'https://api.flickr.com/services/rest/?method=flickr.photosets.getList&api_key=6e8a597cb502b7b95dbd46a46e25db8d&user_id=137290658%40N08&format=json&nojsoncallback=1',\n      )\n      .then((response) =>\n        this.setState(response.data.photosets.photoset),\n      );\n  }\n\n  renderAlbums() {\n    return this.state.photoset.map((album) => (\n      <AlbumDetail\n        navigation={this.props.navigation}\n        key={album.id}\n        title={album.title._content}\n        albumId={album.id}\n      />\n    ));\n  }\n\n  render() {\n    console.log(this.state);\n\n    if (!this.state.photoset) {\n      return <Text>Loading...</Text>;\n    }\n\n    return (\n      <View style={{flex: 1}}>\n        <ScrollView>{this.renderAlbums()}</ScrollView>\n      </View>\n    );\n  }\n}*/\n\nexport default AlbumList;\n"]},"metadata":{},"sourceType":"module"}